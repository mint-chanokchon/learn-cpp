
    Variable and Types

    a = 5;
    b = 2;
    a = a + 1;
    result = a - b;

    นี่เป็นตัวอย่างง่าย ๆ ของการประกาศตัวแปรสหรับจัดเก็บเลขจำนวนเต็ม

    * เราสามารถกำหนดตัวแปรเป็นส่วนหนึ่งของหน่วยความจำ

    * การตั้งชื่อตัวแปรจะต้องมีความเป็นเอกลัก ไม่เหมือนกัน
        - การระบุที่ถูกต้อง คือ ลำดับของตัวอักษร ตัวเลข หรือเครื่องหมายขีดล่าง อย่างน้อยหนึ่งตัว
        - ช่องว่าง เครื่องหมายเว้นวรรค และสัญลักษณ์ไม่สามารถระบุลงไปได้
        - ต้องขึ้นต้นด้วยตัวอักษณเสมอ
        - สามารถขึ้นต้นด้วยขีดเส้รใต้ (_) ได้ แต่ส่วนใหญ่จะถูกสงวนไว้สำหรับคำหลักเฉพาะของ complier หรือตัวละบุ
        ภายนอก เช่นเดียวกับตัวระบุที่มีอักขระขีดล่างสองตัวที่ต่อเนื่องกัน



    *** สำคัญมาก
        - ภาษา c++ คำนึงถึงตัวพิมพ์เล็กและใหญ่ หมายความว่า ตัวแปรที่ระบุด้วยตัวพิมใหญ่ จะเป็นคนละตัวกับตัวแปรที่เป็นตัวพิมเล็ก แม้จะเป็นชื่อเดียวกันก็ตาม



    *** Fundamental data types ***
        - ค่าของตัวแปรจะถูกเก็บไว้ที่ไหนสักแห่งในตำแหน่งที่ไม่ได้ระบุในหน่วยความจำคอมพิวเตอร์เป็น 0 และ 1 
        โดยโปรแกรมของเราไม่จำเป็นต้องรู้ตำแหน่งที่เก็บตัวแปรแน่นอน เราสามารถนำชื่อของตัวแปรไปอ้างอิงถึง
        ตำแหน่งของข้อมูลที่เก็บอยู่ในหน่วยความจำได้
        - สิ่งที่โปรแกรมต้องระวัง คือ ชนิดของข้อมูลที่เก็บในตัวแปร
        > Fundamental data types หรือชนิดข้อมูลพื้นฐาน เป็นชนิดข้อมูลพื้นฐานที่่ใช้โดนตรงโดยภาษานั้น ซึ่งแสดง
        ถึงหน่วยเก็บข้อมูลพื้นฐานที่สนับสนุนโดยระบบส่วนใหญ่ โดยจะจำแนกได้เป็นดังนี้: 
            - Character types แทนอักขนะตัวเดียว เช่น 'A' หรือ '$' โดยมีชนิดข้อมูลคือ char 
            - Numerical integer types สามารถเก็บค่าจำนวนเต็ม เช่น 7 หรือ 1024 โดยจะเป็น 
            signed หรือ unsigned ได้ ขึ้นอยู่กับว่ารองรับค่าลบหรือไม่
            - Floating-point types สามารถแสดงค่าจริง เช่น 3.14, 0.01 ด้วยระดับความแม่นยำที่แตกต่างกัน
            - Boolean type สำหรับเก็บค่าจริงหรือเท็จ

    * ชื่อของจำนวนเต็มบางประเภทสามารถย่อได้ เช่น unsigned int -> unsigned ก็พอ

    * ความแตกต่างของประเภทตัวแปรของแต่ละกลุ่มมีเพียงขนาดเท่านั้น (กล่าวคือหน่วยความจำ)
    ประเภทแรกแต่ละกลุ่มมีขนาดเล็กที่สุด และประเภทสุดท้านจะใหญ่ที่สุด

    * ซึ่งที่ทำให้ c++ ทำงานได้ดีอาจเป็นเพราะว่า complier จะหรับขนาดของชนิดตัวแปรให้เหมาะสมกับสถาปัตยกรรม
    ที่โปรแกรมจะรันได้ดีที่สุด

    * ขนาดที่ใช้วัดจะเป็น bit ยิ่ง bit มาก ก็จะเก็บค่าได้มาก แต่ขนาดก็จะใหญ่ไปด้วย

    * สำหรับประเภททศนิยม ขนาดจะส่งผลต่อความแม่นยำ โดยยิ่งมีบีตมาก ก็ยิ่งมีความแม่นยำสูง



    *** Initialization of variables ***
    *เมื่อเราสร้างแปร เราสารรถกำหนดค่าให้กับตัวแปรได้เลย โดยจะมีวิธีกำหนด 2 แบบ คือ
        - int x = 0;    -> วิธีนี้เรียกว่า c-like Initialization เพราะเป็นการสืบทอดวิธีมาจากภาษา c  [ type identifier = initial_value ]
        - int x (0);    -> วิธีนี้เรียกว่า การกำหนดค่าเริ่มต้นคอนสดรัคเตอร์ (แนะนำโดยภาษา c++) [ type identifier (initial_value) ]
        - int x {0};    -> คล้ายแบบที่ 2 แต่ใช้ {} แทนวงเล็บ



    *** type auto and decltype ***
    * เมื่อตัวแปรใหม่ถูกเรียกใช้งาน complier สามารถระบุประเภทของตัวแปรได้โดยอัตโนมัติโดย initializer
    * ตัวแปรที่ไม่ได้ใช้งานสามารถระบุ decltype ได้
        - example
            int foo = 0;
            decltype(foo);
        - จาก code ตัวอย่าง bar จะมีประเภทเดียวกันกับ foo

    

    *** Introduction to strings ***
        - string เป็น class ที่ถูกสร้างขึ้น สามารถเก็บลำดับของอัพขระ เช่น คำหรือประโยคน์
        - ความแตกต่างแรกกับข้อมูลประเภทพื้นฐาน คือ ในการประกาศตัวแปรจะใช้ object โดยโปรแกรมจำเป็นต้องรวมส่วนหัวที่เป็น library พื้นนิ้นฐาน

